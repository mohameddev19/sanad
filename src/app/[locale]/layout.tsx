import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// Mantine core styles are required by all packages
import '@mantine/core/styles.css';

import { MantineProvider, ColorSchemeScript } from '@mantine/core';
import { Notifications } from '@mantine/notifications';
import {NextIntlClientProvider} from 'next-intl';
import {AuthProvider} from '@/components/AuthProvider';
import { getLangDir } from 'rtl-detect';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}

export default async function RootLayout({
  children,
  params
}: Readonly<RootLayoutProps>) {
  const locale = (await params).locale;
  const direction = getLangDir(locale);

  return (
    <AuthProvider>
      <html lang={locale}>
        <head>
          <ColorSchemeScript />
        </head>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <NextIntlClientProvider>
            <MantineProvider>
              <Notifications />
              {children}
            </MantineProvider>
          </NextIntlClientProvider>
        </body>
      </html>
    </AuthProvider>
  );
}
